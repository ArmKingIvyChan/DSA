There are three types of output from this program:
1. After call command:
    java DSS -p <size_in_bits_of_p> -q <size_in_bits_q> -S <secret_key_file> -P <public_key_file>
Program should generate <secret_key_file>, which contains variables p,q,g,x, and <public_key_file>, in which has
variables p,q,g,y.

2. After call command:
   java DSS -M messagefile -S secret_key_file -s signature_file
Program will tips user that whether signed message file successfully or not. Moreover, signature of this message
file will be produced.

3. After call command:
   java DSS -M messagefile -P public_key_file -s signature_file
Program will show that whether signature of message file is valid or not.


Example of response:

DSA Public Key:
p = 10083965391009097626682956964623684320789173881244870898611865488832336707729795576785230333828999812588111767637147623612405636437745437154941074119256871
q = 1117878610879798927695175102059552243912626828401
g = 5620608258350691419104504921727038893387888737679764001311410585581308106573720024561650670067038763079218331201507887420629203013458211920498549122610940
y = 9074155428873124495163976452287694539828794967762995355814555698097105266171345679261432978783724953015267029978119080270405021040825665218303345986736923
DSA Private Key:
p = 10083965391009097626682956964623684320789173881244870898611865488832336707729795576785230333828999812588111767637147623612405636437745437154941074119256871
q = 1117878610879798927695175102059552243912626828401
g = 5620608258350691419104504921727038893387888737679764001311410585581308106573720024561650670067038763079218331201507887420629203013458211920498549122610940
x = 607742682812680268878670758186
DSA Signature:
k = 731420717927907
r = 233128638591479581185506803221437305642845593765
s = 760809626900294907581818773920603876504632988212
Verifying message: true